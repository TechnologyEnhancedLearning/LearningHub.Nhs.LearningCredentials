name: Deploy LearningCredentials to Dev
on:
  push:
    branches:
      - CI
  workflow_dispatch:
  
permissions:
  id-token: write
  contents: read

jobs:
  deploylearningcredentials:
    runs-on: ubuntu-latest
    environment: dev

    name: 'Deploy LearningCredentials'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      TF_VAR_sql_admin_password: ${{ secrets.SQL_ADMIN_PASSWORD }}

    steps:
      - uses: actions/checkout@v2

      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Terraform init'
        id: init
        run: |
          cd LearningHub.Nhs.LearningCredentials.Api/Terraform
          terraform init

      - name: 'Terraform apply'
        id: apply
        run: |
          cd LearningHub.Nhs.LearningCredentials.Api/Terraform
          terraform apply -auto-approve

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'

      - name: Perform variable substitution
        uses: microsoft/variable-substitution@v1
        with:
          files: '**/appsettings.json'
        env:
          Environment: 'Development'
          ConnectionStrings.ElfhHubDbConnection: ${{ secrets.ELFH_HUB_DB_CONNECTION }}
          ConnectionStrings.LearningCredentialsDbConnection: ${{ secrets.LEARNING_CREDENTIALS_DB_CONNECTION }}
          ConnectionStrings.NLogDb: ${{ secrets.NLOG_DB }}
          ConnectionStrings.LearningHubRedis: ${{ secrets.LEARNING_HUB_REDIS }}
          Settings.AuthenticationServiceUrl": ${{ vars.AUTH_SERVICE_URL }}

      - name: dotnet build and publish
        run: |
          dotnet restore
          dotnet build --configuration Release
          dotnet publish -c Release -o './myapp' 

      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: 'LearningCredentials' 
          package: './myapp'

      - name: logout
        run: |
          az logout
