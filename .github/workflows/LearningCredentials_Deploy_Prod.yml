name: Deploy LearningCredentials to Prod
on:
  push:
    branches:
      - prod
  workflow_dispatch:
  
permissions:
  id-token: write
  contents: read

jobs:
  deploylearningcredentials:
    runs-on: windows-latest
    environment: prod

    name: 'Deploy LearningCredentials'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    steps:
      - uses: actions/checkout@v2

      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false  # Skip wrapper script installation

      - name: 'Terraform init'
        id: init
        run: |
          cd LearningHub.Nhs.LearningCredentials.Api/Terraform
          terraform init "-backend-config=backend-prod.tfvars"

      # - name: 'Terraform destroy'
      #   id: destroy
      #   run: |
      #     cd LearningHub.Nhs.LearningCredentials.Api/Terraform
     #     terraform destroy -auto-approve -var="ResourceGroupName=${{ vars.AZURE_RESOURCE_GROUP_NAME }}" -var="ResourceGroupLocation=${{ vars.AZURE_RESOURCE_GROUP_LOCATION }}" -var="DatabaseName=${{ vars.AZURE_DATABASE_NAME }}" -var="DatabaseServerId=${{ vars. AZURE_DATABASE_SERVER_ID }}" -var="LearningCredentialsAppName=${{ vars.AZURE_LEARNING_CREDENTIALS_APP_NAME }}" -var="LearningCredentialsSubnetId=${{ vars.AZURE_LEARNING_CREDENTIALS_SUBNET_NAME }}"

      - name: 'Terraform apply'
        id: apply
        run: |
          cd LearningHub.Nhs.LearningCredentials.Api/Terraform
          terraform apply -auto-approve -var="ResourceGroupName=${{ vars.AZURE_RESOURCE_GROUP_NAME }}" -var="ResourceGroupLocation=${{ vars.AZURE_RESOURCE_GROUP_LOCATION }}" -var="DatabaseName=${{ vars.AZURE_DATABASE_NAME }}" -var="DatabaseServerId=${{ vars.AZURE_DATABASE_SERVER_ID }}" -var="LearningCredentialsAppName=${{ vars.AZURE_LEARNING_CREDENTIALS_APP_NAME }}" -var="LearningCredentialsSubnetId=${{ vars.AZURE_LEARNING_CREDENTIALS_SUBNET_NAME }}"

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'

      - name: Add Nuget source
        run: dotnet nuget add source 'https://pkgs.dev.azure.com/e-LfH/_packaging/LearningHubFeed/nuget/v3/index.json' --name 'LearningHubFeed'  --username 'colin.beeby' --password ${{ secrets.AZURE_DEVOPS_PAT }} --store-password-in-clear-text      
      
      

      - name: Perform variable substitution
        uses: microsoft/variable-substitution@v1
        with:
          files: '**/appsettings.json'
        env:
          Environment: 'Production'
          ConnectionStrings.ElfhHubDbConnection: ${{ secrets.ELFH_HUB_DB_CONNECTION }}
          ConnectionStrings.LearningCredentialsDbConnection: ${{ secrets.LEARNING_CREDENTIALS_DB_CONNECTION }}
          ConnectionStrings.NLogDb: ${{ secrets.NLOG_DB }}
          ConnectionStrings.LearningHubRedis: ${{ secrets.LEARNING_HUB_REDIS }}
          Settings.AuthenticationServiceUrl: ${{ vars.AUTH_SERVICE_URL }}
          Swagger.BuildNumber: "1.0"

      - name: dotnet build and publish
        run: |
          dotnet restore
          dotnet build --configuration Release
          dotnet publish -c Release -o ./myapp

      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{ vars.AZURE_LEARNING_CREDENTIALS_APP_NAME }}
          package: ./myapp

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Build database project
        run: msbuild /t:Build /p:Configuration=Release /p:OutputPath=./myapp ./LearningHub.Nhs.LearningCredentials.Database/LearningHub.Nhs.LearningCredentials.Database.sqlproj

      - name: publish database project
        uses: azure/sql-action@v2.2.1
        with:
          connection-string: ${{ secrets.LEARNING_CREDENTIALS_DB_CONNECTION }}
          path: ./LearningHub.Nhs.LearningCredentials.Database/myapp/LearningHub.Nhs.LearningCredentials.Database.dacpac
          action: publish
 
      - name: logout
        run: |
          az logout
